apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app: {{ template "traefik.name" . }}
    chart: {{ template "traefik.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: {{ default 1 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "traefik.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "traefik.name" . }}
        chart: {{ template "traefik.chart" . }}
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "traefik.fullname" . }}
      terminationGracePeriodSeconds: 60
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        name: {{ template "traefik.fullname" . }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: web
          containerPort: {{ .Values.ports.web.port }}
          hostPort: 80
          protocol: TCP
        - name: websecure
          containerPort: {{ .Values.ports.websecure.port }}
          hostPort: 443
          protocol: TCP
        - name: traefik
          containerPort: {{ .Values.ports.traefik.port }}
          protocol: TCP
        args:
          - "--configfile=/config/traefik.yaml"
        envFrom:
          - secretRef:
              name: {{ template "traefik.fullname" . }}-acme

        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /acme
          name: acme

      volumes:
      - name: config
        configMap:
          name: {{ template "traefik.fullname" . }}
      - name: acme
        persistentVolumeClaim:
          claimName: {{ template "traefik.fullname" . }}-acme
